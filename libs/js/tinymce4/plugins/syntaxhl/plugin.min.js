tinymce.PluginManager.add('syntaxhl', function(editor, url) {
	function showDialog() {
		var data = {}, dom = editor.dom;
		var win;

		var updateOptions = function(e) {
			data[this.name()] = this.value();
		};
		win = editor.windowManager.open({
			title: 'Insert code using Syntaxhighlighter',
			data: data,
			body: [
				{
					type: 'fieldset', 
					title: 'Highlighter Options', 
					layout: 'flex', 
					direction: 'column',
					align: 'left', 
					items: [
						{
							type: 'container', 
							layout: 'flex', 
							direction: 'row',
							align: 'center', 
							spacing: 15,
							items: [
								{name: 'auto-links', type: 'checkbox', text: 'Auto links', checked: true, onclick: updateOptions},
								{name: 'collapse', type: 'checkbox', text: 'Collapse', onclick: updateOptions},
								{name: 'wrap-lines', type: 'checkbox', text: 'Wrap Lines', checked: true, onclick: updateOptions},
								{name: 'html-script', type: 'checkbox', text: 'Html Script', onclick: updateOptions},
								{name: 'toolbar', type: 'checkbox', text: 'Show Toolbar', checked: true, onclick: updateOptions},
								{name: 'light', type: 'checkbox', text: 'Light', onclick: updateOptions},
								{name: 'gutter', type: 'checkbox', text: 'Gutter', checked: true, onclick: updateOptions},
								{name: 'smart-tabs', type: 'checkbox', text: 'Smart Tabs', checked: true, onclick: updateOptions},
								{name: 'pad-line-numbers', type: 'checkbox', text: 'Pad Line Numbers', checked: true, onclick: updateOptions}
							]
						},
						{
							type: 'container', 
							layout: 'flex', 
							direction: 'row',
							align: 'center', 
							spacing: 15,
							items: [
								{type: 'label', text: 'First Line:'},
								{name: 'first-line', type: 'textbox', class: 'number', value: "1", onchange: updateOptions, onkeyup: updateOptions},
								{type: 'label', text: 'Highlight Lines:'},
								{name: 'highlight', type: 'textbox', onchange: updateOptions, onkeyup: updateOptions},
								{type: 'label', text: 'Tab Size:'},
								{name: 'tab-size', type: 'textbox', onchange: updateOptions, onkeyup: updateOptions},
								{type: 'label', text: 'Custom Class:'},
								{name: 'class-name', type: 'textbox', onchange: updateOptions, onkeyup: updateOptions}
							]
						}
					]
				},
				{name: 'lang', type: 'listbox', label: 'Choose Language:', value: 'plain', values: [
					{text: "C/C++", value: "cpp"},
					{text: "Java", value: "java"},
					{text: "JavaScript", value: "jscript"},
					{text: "XML/XHTML", value: "xml"},
					{text: "Python", value: "python"},
					{text: "Plain(Text)", value: "plain"},
					{text: '-------------', value: ''},
					{text: "AppleScript", value: "applescript"},
					{text: "ActionScript3", value: "as3"},
					{text: "Bash(Shell)", value: "bash"},
					{text: "Cold Fusion", value: "coldfusion"},
					{text: "C#", value: "csharp"},
					{text: "CSS", value: "css"},
					{text: "Delphi", value: "delphi"},
					{text: "Diff", value: "diff"},
					{text: "Erlang", value: "erlang"},
					{text: "Groovy", value: "groovy"},
					{text: "JavaFX", value: "javafx"},
					{text: "Perl", value: "perl"},
					{text: "PHP", value: "php"},
					{text: "PowerShell", value: "powershell"},
					{text: "Ruby", value: "ruby"},
					{text: "SASS", value: "sass"},
					{text: "Scala", value: "scala"},
					{text: "SQL", value: "sql"},
					{text: "VB", value: "vb"}
				]},
				{
					type: 'textbox',
					name: 'code',
					multiline: true,
					autofocus: true,
					minWidth: 400,
					minHeight: 300
				}				
			],
			onSubmit: function(e) {
				var tag = editor.settings.syntaxhl_tag || 'pre';
				var options = "brush:" + e.data.lang;
				for (var d in data) {
					options += "; " + d + ":" + data[d];
				}
				editor.insertContent(dom.createHTML(tag, {class:options}, e.data.code));
			}
		});
	}

	editor.addButton('syntaxhl', {
		image : url + '/img/highlight.gif',
		tooltip: 'Insert code using Syntaxhighlighter',
		shortcut: 'Ctrl+K',
		onclick: showDialog,
		stateSelector: 'a[href]'
	});

	editor.addShortcut('Ctrl+H', '', showDialog);

	this.showDialog = showDialog;

	editor.addMenuItem('syntaxhl', {
		text: 'Insert code using Syntaxhighlighter',
		shortcut: 'Ctrl+H',
		onclick: showDialog,
		stateSelector: 'a[href]',
		context: 'insert',
		prependToContext: true
	});
});
